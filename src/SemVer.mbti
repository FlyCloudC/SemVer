package "FlyCloudC/SemVer"

import(
  "moonbitlang/core/string"
)

// Values
fn is_valid(@string.StringView) -> Bool

fn parse(@string.StringView) -> T raise ParseError

// Types and methods
pub enum Identifier {
  Num(@string.StringView)
  Alpha(@string.StringView)
}
impl Eq for Identifier

pub suberror ParseError Int
impl Show for ParseError

pub struct T {
  major : @string.StringView
  minor : @string.StringView
  patch : @string.StringView
  pre_release : Array[Identifier]?
  build : Array[@string.StringView]?
}
fn T::is_pre_release(Self) -> Bool
impl Compare for T
impl Eq for T
impl Show for T

// Type aliases

// Traits

